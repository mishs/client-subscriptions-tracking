{"version":3,"sources":["Context/DevicesReducer.js","Context/DevicesContext.js","components/Filter/FilterCheck.jsx","components/Filter/Filters.js","components/AsideTab.js","components/Layout/ColComposition.jsx","components/Search.js","components/DevicesHeader.js","components/Licenses.jsx","utilities/utils.js","components/SubscriptionGroup.js","components/LicenseGroups.js","components/Layout/MainTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["DevicesReducer","state","action","type","activeRow","payload","activeGroup","activeSGroup","filters","searchQuery","searchResults","data","intialState","devices","loading","error","isSearchActive","foundDevices","selected","onlineState","OSVersion","policyState","licenseState","deviceState","DevicesContext","createContext","DevicesProvider","children","useReducer","dispatch","Provider","value","updateActiveRow","updateActiveGroup","updateActiveSubscriptionGroup","updateFilters","filter","updateSearchQuery","updateSearchResults","FilterCheck","props","className","defaultChecked","label","Filters","useContext","toggleFilter","checked","category","newFilter","newCategoryArray","push","v","Form","icon","faAngleLeft","onClick","setFiltersOpen","faFilter","name","onChange","e","target","Group","controlId","Check","AsideTab","id","model","osversion","description","androidVersion","lastOnlineAction","lastStateUpdate","online","faCircle","faEllipsisV","Tabs","defaultActiveKey","Tab","eventKey","title","Table","size","creationDate","expirationDate","noOfGroups","noOfDevices","map","tab","index","ColComposition","useState","window","innerWidth","width","setWidth","useEffect","updateWindowDimensions","newWidth","addEventListener","document","querySelector","style","overflow","removeEventListener","Col","md","Search","query","setQuery","faSearch","currentTarget","dd","groups","group","licenses","license","toLowerCase","includes","grp","length","DevicesHeader","Button","handleClick","faHome","Licenses","selectedRow","React","offset","setOffset","activePage","setActivePage","groupLicense","device","item","Object","assign","setActiveId","setActiveGrp","setActiveSGrp","getRow","toggleClass","pages","i","Pagination","Item","active","Math","ceil","filteredData","paginate","licence","index1","activeId","search","Prev","disabled","Next","keyToFind","filterData","v1","policy","filtered","SubscriptionGroup","grpIndex","activeGrpTag","activeSubscriptionGrpTag","splitedGrp","parseInt","split","splitedSGrp","licencesCount","setCount","inStringFilters","JSON","stringify","count","Accordion","sorted","replace","sort","compareVersions","a","indexOf","Fragment","Card","Toggle","as","Header","toString","Collapse","Body","subGIndex","LicenseGroups","mArray","setMArray","subscription","subGroupsFiltered","val","MainTable","filtersOpen","App","Container","fluid","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f828a3d7.chunk.js","sourcesContent":["export default function DevicesReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'UPDATE_ACTIVEROW':\r\n            return {\r\n                ...state,\r\n                activeRow: action.payload,\r\n            }\r\n        case 'UPDATE_ACTIVEGROUP':\r\n            return {\r\n                ...state,\r\n                activeGroup: action.payload,\r\n            }\r\n\r\n        case 'UPDATE_ACTIVESGROUP':\r\n            return {\r\n                ...state,\r\n                activeSGroup: action.payload,\r\n            }\r\n        case 'UPDATE_FILTERS':\r\n            return {\r\n                ...state,\r\n                filters: action.payload,\r\n            }\r\n        case 'UPDATE_SEARCH_QUERY':\r\n            return {\r\n                ...state,\r\n                searchQuery: action.payload,\r\n            }\r\n        case 'UPDATE_SEARCH_RESULTS':\r\n            return {\r\n                ...state,\r\n                searchResults: action.payload,\r\n            }\r\n\r\n        case 'UPDATE_DATA':\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { createContext, useReducer } from 'react';\r\nimport DevicesReducer from './DevicesReducer';\r\nimport data from './json-mock-api/db.json'\r\n\r\nconst intialState = {\r\n    data,\r\n    searchResults: [],\r\n    devices: {\r\n        loading: false,\r\n        error: null,\r\n        data: [],\r\n        isSearchActive: false,\r\n        foundDevices: [],\r\n    },\r\n    activeRow: {\r\n        selected: false\r\n    },\r\n    activeGroup: null,\r\n    activeSGroup: null,\r\n    searchQuery: '',\r\n    filters: {\r\n        onlineState: [],\r\n        OSVersion: [],\r\n        policyState: [],\r\n        licenseState: [],\r\n        deviceState: [],\r\n    }\r\n}\r\n\r\nexport const DevicesContext = createContext(intialState);\r\n\r\nexport const DevicesProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(DevicesReducer, intialState);\r\n\r\n    function updateActiveRow(activeRow) {\r\n        dispatch({\r\n            type: 'UPDATE_ACTIVEROW',\r\n            payload: activeRow\r\n        })\r\n    }\r\n\r\n    function updateActiveGroup(activeGroup) {\r\n        dispatch({\r\n            type: 'UPDATE_ACTIVEGROUP',\r\n            payload: activeGroup\r\n        })\r\n    }\r\n\r\n    function updateActiveSubscriptionGroup(activeSGroup) {\r\n        dispatch({\r\n            type: 'UPDATE_ACTIVESGROUP',\r\n            payload: activeSGroup\r\n        })\r\n    }\r\n\r\n    function updateFilters(filter) {\r\n        dispatch({\r\n            type: 'UPDATE_FILTERS',\r\n            payload: filter\r\n        })\r\n    }\r\n\r\n    function updateSearchQuery(searchQuery) {\r\n        dispatch({\r\n            type: 'UPDATE_SEARCH_QUERY',\r\n            payload: searchQuery\r\n        })\r\n    }\r\n\r\n    function updateSearchResults(searchResults) {\r\n        dispatch({\r\n            type: 'UPDATE_SEARCH_RESULTS',\r\n            payload: searchResults\r\n        })\r\n    }\r\n\r\n    return <DevicesContext.Provider value={{\r\n        activeRow: state.activeRow,\r\n        filters: state.filters,\r\n        data: state.data,\r\n        searchQuery: state.searchQuery,\r\n        searchResults: state.searchResults,\r\n        activeGroup: state.activeGroup,\r\n        activeSGroup: state.activeSGroup,\r\n        updateActiveRow,\r\n        updateActiveGroup,\r\n        updateActiveSubscriptionGroup,\r\n        updateFilters,\r\n        updateSearchQuery,\r\n        updateSearchResults\r\n    }}>\r\n        {children}\r\n    </DevicesContext.Provider>\r\n}","import React from 'react'\r\n\r\nfunction FilterCheck(props) {\r\n    return (\r\n        <li>\r\n            <label>\r\n                <input type='checkbox'\r\n                className='mr-2'\r\n                    defaultChecked={false}\r\n                    {...props}\r\n                />\r\n                {props.label}\r\n            </label>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default FilterCheck\r\n","import React, { useContext } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilter, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\nimport { Form } from 'react-bootstrap'\nimport { DevicesContext } from '../../Context/DevicesContext'\nimport FilterCheck from './FilterCheck'\n\nfunction Filters(props) {\n    const { filters, updateFilters } = useContext(DevicesContext);\n\n    function toggleFilter(checked, category, value) {\n        let newFilter = filters\n        let newCategoryArray = newFilter[category]\n        if (checked) {\n            newCategoryArray.push(value)\n        } else {\n            newCategoryArray = newCategoryArray.filter(v => (v !== value))\n        }\n        newFilter[category] = newCategoryArray\n        updateFilters(newFilter)\n    }\n\n    return (\n        <Form className='filters-box pl-3'>\n            <div className='d-flex align-items-center justify-content-between'>\n                <h3>Filter</h3>\n                <div className='mr-3'>\n                    <FontAwesomeIcon icon={faAngleLeft}\n                        onClick={\n                            () => {\n                                props.setFiltersOpen(false)\n                            }\n                        }\n                    />\n                    <FontAwesomeIcon icon={faFilter} />\n                </div>\n            </div>\n\n            <div className='filters-section'>\n                <div>\n                    <p>online state</p>\n                    <ul>\n                        <FilterCheck type='checkbox'\n                            name='onlineState'\n                            onChange={(e) => toggleFilter(e.target.checked, 'onlineState', 'online')}\n                            label='online'\n                        />\n\n                        <FilterCheck type='checkbox'\n                            name='offlineState'\n                            onChange={(e) => toggleFilter(e.target.checked, 'onlineState', 'offline')}\n                            label='offline'\n                        />\n\n                    </ul>\n                </div>\n\n                <div>\n                    <p>policy state</p>\n                    <ul>\n                        <FilterCheck type='checkbox'\n                            name='notApplied'\n                            onChange={(e) => toggleFilter(e.target.checked, 'policyState', 'applied')}\n                            label='applied'\n                        />\n                        <FilterCheck type='checkbox'\n                            name='applied'\n                            onChange={(e) => toggleFilter(e.target.checked, 'policyState', 'notApplied')}\n                            label='not applied'\n                        />\n\n                    </ul>\n                </div>\n\n                <div>\n                    <p>license</p>\n                    <ul>\n                        <FilterCheck type='checkbox'\n                            name='allOk'\n                            onChange={(e) => toggleFilter(e.target.checked, 'licenseState', 'allOk')}\n                            label='all ok'\n                        />\n\n                        <FilterCheck type='checkbox'\n                            name='aboutToExpire'\n                            onChange={(e) => toggleFilter(e.target.checked, 'licenseState', 'aboutToExpire')}\n                            label='about to expire'\n                        />\n\n                        <FilterCheck type='checkbox'\n                            name='runOut'\n                            onChange={(e) => toggleFilter(e.target.checked, 'licenseState', 'expired')}\n                            label='run out'\n                        />\n\n                    </ul>\n                </div>\n\n                <div>\n                    <p>device type</p>\n                    <ul>\n                        <FilterCheck type='checkbox'\n                            name='raspberryPi'\n                            onChange={(e) => toggleFilter(e.target.checked, 'deviceState', 'Raspberry Pi 3')}\n                            label='Rasberry Pi'\n                        />\n\n                        <FilterCheck type='checkbox'\n                            name='other'\n                            onChange={(e) => toggleFilter(e.target.checked, 'deviceState', 'others')}\n                            label='other'\n                        />\n\n                    </ul>\n                </div>\n\n                <div>\n                    <p>OS version</p>\n                    <ul>\n                        <li>\n                            <Form.Group controlId='1.0.0'>\n                                <Form.Check type='checkbox' label='1.0.0'\n                                    onChange={(e) => toggleFilter(e.target.checked, 'OSVersion', '1.0.0')}\n                                />\n                            </Form.Group>\n                        </li>\n                        <li>\n                            <Form.Group controlId='1.1.0'>\n                                <Form.Check type='checkbox' label='1.1.0'\n                                    onChange={(e) => toggleFilter(e.target.checked, 'OSVersion', '1.1.0')}\n                                />\n                            </Form.Group>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </Form>\n    )\n}\n\nexport default Filters\n","import React, { useContext } from 'react';\nimport { Tabs, Tab, Table } from 'react-bootstrap';\nimport { faEllipsisV, faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DevicesContext } from '../Context/DevicesContext';\n\nfunction AsideTab() {\n  const { activeRow, activeGroup, activeSGroup, updateActiveRow, updateActiveGroup, updateActiveSubscriptionGroup } = useContext(DevicesContext);\n  const {\n    id,\n    name,\n    model,\n    osversion,\n    description,\n    androidVersion,\n    lastOnlineAction,\n    lastStateUpdate,\n    online,\n  } = activeRow;\n  const tabs = [\n    {\n      eventKey: 'system',\n      title: 'System'\n    },\n    {\n      eventKey: 'hardware',\n      title: 'Hardware'\n    },\n    {\n      eventKey: 'Networks',\n      title: 'Networks'\n    },\n    {\n      eventKey: 'USB',\n      title: 'USB'\n    },\n    {\n      eventKey: 'Apps',\n      title: 'Apps'\n    },\n    {\n      eventKey: 'Commands',\n      title: 'Commands'\n    },\n  ]\n\n  return (\n    <div>\n      {(activeRow.selected || activeGroup || activeSGroup) && (\n        <div className='d-flex flex-column'>\n          <i className='fas fa-times text-danger ml-auto mb-3 mr-2 cur-pointer'\n            onClick={\n              () => {\n                updateActiveGroup(null)\n                updateActiveSubscriptionGroup(null)\n                updateActiveRow({ selected: false })\n              }\n            }\n          ></i>\n          <header className='right-header'>\n            <ul>\n              <li className={!online ? 'warn' : null}>\n                <FontAwesomeIcon icon={faCircle} />\n                {online ? `online` : `offline`}\n              </li>\n              <li>\n                <FontAwesomeIcon icon={faCircle} />\n                policy\n              </li>\n              <li>\n                <FontAwesomeIcon icon={faCircle} />\n                license\n              </li>\n            </ul>\n\n            <div>\n              <p>{activeRow.selected ? name : (activeGroup ? activeGroup.name : activeSGroup.name)}</p>\n              <span>{lastOnlineAction}</span>\n            </div>\n\n            <div>\n              <FontAwesomeIcon icon={faEllipsisV} />\n            </div>\n          </header>\n\n          <Tabs defaultActiveKey='summary'>\n            <Tab eventKey='summary' title='Summary'>\n              <p>summary</p>\n              <Table size='sm'>\n                <tbody>\n                  {activeRow.selected && (\n                    <>\n                      <tr>\n                        <td>ID</td>\n                        <td>{id}</td>\n                      </tr>\n                      <tr>\n                        <td>model name</td>\n                        <td>{model}</td>\n                      </tr>\n                      <tr>\n                        <td>Serial number</td>\n                        <td>000000</td>\n                      </tr>\n                      <tr>\n                        <td>Name</td>\n                        <td>{name}</td>\n                      </tr>\n                      <tr>\n                        <td>Description</td>\n                        <td>{description}</td>\n                      </tr>\n                      <tr>\n                        <td>Android Version</td>\n                        <td>{androidVersion}</td>\n                      </tr>\n                      <tr>\n                        <td>Sample Version</td>\n                        <td>{osversion}</td>\n                      </tr>\n                      <tr>\n                        <td>last online action</td>\n                        <td>{lastOnlineAction}</td>\n                      </tr>\n                      <tr>\n                        <td>last state update</td>\n                        <td>{lastStateUpdate}</td>\n                      </tr>\n                    </>\n                  )}\n                  {activeGroup && (\n                    <>\n                      <tr>\n                        <td>Name</td>\n                        <td>{activeGroup.name}</td>\n                      </tr>\n                      <tr>\n                        <td>Description</td>\n                        <td>{activeGroup.description}</td>\n                      </tr>\n                      <tr>\n                        <td>Type</td>\n                        <td>{activeGroup.type}</td>\n                      </tr>\n                      <tr>\n                        <td>Creation Date</td>\n                        <td>{activeGroup.creationDate}</td>\n                      </tr>\n                      <tr>\n                        <td>Expiration Date</td>\n                        <td>{activeGroup.expirationDate}</td>\n                      </tr>\n                      <tr>\n                        <td>No. of Groups</td>\n                        <td>{activeGroup.noOfGroups}</td>\n                      </tr>\n                      <tr>\n                        <td>No. of Devices</td>\n                        <td>{activeGroup.noOfDevices}</td>\n                      </tr>\n                    </>\n                  )}\n                  {activeSGroup && (\n                    <>\n                      <tr>\n                        <td>Name</td>\n                        <td>{activeSGroup.name}</td>\n                      </tr>\n                      <tr>\n                        <td>Description</td>\n                        <td>{activeSGroup.description}</td>\n                      </tr>\n                      <tr>\n                        <td>No. of Devices</td>\n                        <td>{activeSGroup.noOfDevices}</td>\n                      </tr>\n                      <tr>\n                        <td>Policy State</td>\n                        <td>{'Policy State'}</td>\n                      </tr>\n                    </>\n                  )}\n                </tbody>\n              </Table>\n            </Tab>\n            {\n              activeRow.selected ?\n                tabs.map((tab, index) => {\n                  return (\n                    <Tab key={index} eventKey={tab.eventKey} title={tab.title}>\n                      {tab.eventKey}\n                    </Tab>\n                  )\n                })\n                : null\n            }\n          </Tabs>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AsideTab;\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { DevicesContext} from '../../Context/DevicesContext';\r\nimport AsideTab from '../AsideTab';\r\n\r\nfunction ColComposition() {\r\n  const { activeRow, activeGroup, activeSGroup, updateActiveGroup, updateActiveRow, updateActiveSubscriptionGroup } = useContext(DevicesContext);\r\n  const [width,setWidth] = useState(window.innerWidth)\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const newWidth = window.innerWidth;\r\n      setWidth(newWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', updateWindowDimensions);\r\n    if((activeRow.selected || activeGroup || activeSGroup) && width<=1000){\r\n      document.querySelector('body').style.overflow = 'hidden'\r\n    }else{\r\n      document.querySelector('body').style.overflow = 'visible'\r\n    }\r\n\r\n    return () => window.removeEventListener('resize', updateWindowDimensions) \r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(width<=1000){\r\n      updateActiveGroup(null);\r\n      updateActiveRow({ selected: false });\r\n      updateActiveSubscriptionGroup(null);\r\n    }\r\n  }, [width])\r\n\r\n  return (\r\n    <Col md={width>1000?5:null} className={`details_block ${(activeRow.selected || activeGroup || activeSGroup)? '':'d-none'} ${width<=1000?'create-popup':''}`}>\r\n      {<AsideTab />}\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default ColComposition;\r\n","import React, { useContext, useState } from 'react'\nimport { DevicesContext } from '../Context/DevicesContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Search() {\n    const { data, updateSearchQuery, updateSearchResults } = useContext(DevicesContext)\n    const [query, setQuery] = useState('')\n\n    function handleInput({ currentTarget = {} }) {\n        const { value } = currentTarget\n        setQuery(value)\n        updateSearchQuery(value)\n\n        updateSearchResults(data.map(dd => {\n\n            let groups = dd.groups.map(group => {\n                let licenses = group.licenses.filter(license => {\n                    return license.name.toLowerCase().includes(value.toLowerCase()) ||\n                        license.model.toLowerCase().includes(value.toLowerCase()) ||\n                        license.description.toLowerCase().includes(value.toLowerCase()) ||\n                        license.osversion.toLowerCase().includes(value.toLowerCase()) ||\n                        group.osversion.toLowerCase().includes(value.toLowerCase()) ||\n                        group.group.toLowerCase().includes(value.toLowerCase()) ||\n                        group.description.toLowerCase().includes(value.toLowerCase()) ||\n                        group.model.toLowerCase().includes(value.toLowerCase())\n                })\n                return { ...group, licenses }\n            }).filter(grp => {\n                return grp.licenses.length\n            })\n            return groups.length ? { ...dd, groups } : null\n        }).filter(v => v))\n    }\n\n    return (\n        <div className='search-input_container'>\n            <FontAwesomeIcon icon={faSearch} />\n            <input\n                type='text'\n                value={query}\n                onChange={handleInput}\n            />\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter, faHome, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'react-bootstrap';\nimport Search from './Search';\n\nfunction DevicesHeader(props) {\n  return (\n    <div className='devices-header'>\n      <div className='title'>\n        <Button className='mr-4 position-sticky sticky-top'>\n          <FontAwesomeIcon icon={faFilter} onClick={props.handleClick} />\n        </Button>\n      </div>\n      <div className='search_container'>\n\n        <h2> <FontAwesomeIcon icon={faHome} /> Device Overview</h2>\n      </div>\n\n      <Search />\n    </div>\n  );\n}\n\nexport default DevicesHeader;\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport Highlight from 'react-highlighter'\r\nimport { DevicesContext } from '../Context/DevicesContext'\r\n\r\nfunction Licenses(props) {\r\n    const [offset, setOffset] = React.useState(0)\r\n    const [activePage, setActivePage] = React.useState(1)\r\n    let selectedRow\r\n    let licenses = []\r\n    const { updateActiveRow, updateActiveGroup, updateActiveSubscriptionGroup, searchQuery } = React.useContext(DevicesContext)\r\n\r\n    function toggleClass(id) {\r\n        props.setActiveId(id);\r\n    }\r\n\r\n    function getRow(id) {\r\n        const groups = props.data.map((group) => group.licenses);\r\n        const devices = groups.map((groupLicense) => groupLicense);\r\n        devices.map((device) => device.map((item) => licenses.push(item)));\r\n        selectedRow = licenses.filter((license) => license.id === id);\r\n        selectedRow = Object.assign({ selected: true }, ...selectedRow);\r\n        props.setActiveId(id)\r\n        props.setActiveGrp(null)\r\n        props.setActiveSGrp(null)\r\n        updateActiveRow(selectedRow)\r\n        updateActiveGroup(null)\r\n        updateActiveSubscriptionGroup(null)\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        getRow(id)\r\n        toggleClass(id)\r\n    }\r\n    let pages = []\r\n    for (let i = 1; i <= Math.ceil(props.filteredData.length / 5); i++) {\r\n        pages.push(\r\n            <Pagination.Item key={i} active={activePage === i}\r\n                onClick={\r\n                    () => {\r\n                        setOffset((i - 1) * 5)\r\n                        setActivePage(i)\r\n                    }\r\n                }\r\n            >\r\n                {i}\r\n            </Pagination.Item>\r\n        )\r\n    }\r\n    return (\r\n        <Table key={props.keyToFind}>\r\n            <tbody className='licenses_body'>\r\n                {\r\n                    props.filteredData.filter((paginate, index) => index >= offset && index < (offset + 5)).map((licence, index1) =>\r\n                        <tr onClick={() => handleClick(licence.id)} key={index1} className={`license_row cur-pointer ${licence.id === props.activeId ? 'active' : ''}`} data-selector={licence.id} >\r\n                            <td>\r\n                                {\r\n                                    index1 % 2 === 0 ?\r\n                                        <i className='fas fa-wifi text-white py-2 px-1'></i>\r\n                                        :\r\n                                        <i className='fas fa-calendar-times text-white py-2 px-1'></i>\r\n                                }\r\n                                &nbsp;&nbsp;\r\n                                <Highlight search={searchQuery}>{licence.name}</Highlight></td>\r\n                            <td><Highlight search={searchQuery}>{licence.model}</Highlight></td>\r\n                            <td><Highlight search={searchQuery}>{licence.osversion}</Highlight></td>\r\n                            <td><Highlight search={searchQuery}>{licence.description}</Highlight></td>\r\n                        </tr>\r\n                    )\r\n                }\r\n                <tr>\r\n                    <td>\r\n                        <Pagination className='license_pagination'>\r\n                            <Pagination.Prev\r\n                                disabled={offset < 5}\r\n                                onClick={() => {\r\n                                    setOffset(offset - 5)\r\n                                    setActivePage(activePage - 1)\r\n                                }}\r\n                            />\r\n                            {pages}\r\n                            <Pagination.Next\r\n                                disabled={props.filteredData.length <= (offset + 5)}\r\n                                onClick={() => {\r\n                                    setOffset(offset + 5)\r\n                                    setActivePage(activePage + 1)\r\n                                }}\r\n                            />\r\n                        </Pagination>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default Licenses\r\n","export const filterData = (filters,data) => {\r\n    let filteredData = data.filter((v) => {\r\n        let OSVersion = null;\r\n        if (filters['OSVersion'].length) {\r\n          filters['OSVersion'].map((v1) => {\r\n            if (v1 === v.osversion) {\r\n              OSVersion = true;\r\n            } else if (OSVersion !== true) {\r\n              OSVersion = false;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n\r\n        let onlineState = null;\r\n        if (filters['onlineState'].length) {\r\n          filters['onlineState'].map((v1) => {\r\n            if (v.online === true && v1 === 'online') {\r\n              onlineState = true;\r\n            } else if (v.online === false && v1 === 'offline') {\r\n              onlineState = true;\r\n            } else if (onlineState !== true) {\r\n              onlineState = false;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n\r\n        let deviceState = null;\r\n        if (filters['deviceState'].length) {\r\n          filters['deviceState'].map((v1) => {\r\n            if (v.model === v1) {\r\n              deviceState = true;\r\n            } else if (\r\n              v1 === 'others' &&\r\n              v.model !== 'Raspberry Pi 3'\r\n            ) {\r\n              deviceState = true;\r\n            } else if (deviceState !== true) {\r\n              deviceState = false;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n\r\n        let policyState = null;\r\n        if (filters['policyState'].length) {\r\n          filters['policyState'].map((v1) => {\r\n            if (v.policy === v1) {\r\n              policyState = true;\r\n            } else if (\r\n              v1 === 'notApplied' &&\r\n              v.policy !== 'applied'\r\n            ) {\r\n              policyState = true;\r\n            } else if (policyState !== true) {\r\n              policyState = false;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n\r\n        let licenseState = null;\r\n        if (filters['licenseState'].length) {\r\n          filters['licenseState'].map((v1) => {\r\n            if (v1 === v.license) {\r\n              licenseState = true;\r\n            } else if (licenseState !== true) {\r\n              licenseState = false;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n\r\n        let filtered =\r\n          OSVersion ||\r\n          onlineState ||\r\n          deviceState ||\r\n          policyState ||\r\n          licenseState;\r\n\r\n        if (\r\n          OSVersion === null &&\r\n          onlineState === null &&\r\n          deviceState == null &&\r\n          policyState == null &&\r\n          licenseState == null\r\n        ) {\r\n          filtered = true;\r\n        }\r\n\r\n        return filtered;\r\n      });\r\n\r\n      return filteredData;\r\n}","import React, { useEffect, useState } from \"react\";\nimport { Accordion, Card, Table } from \"react-bootstrap\";\nimport { DevicesContext } from \"../Context/DevicesContext\";\nimport Licenses from \"./Licenses\";\nimport Highlight from \"react-highlighter\";\nimport compareVersions from 'compare-versions';\nimport { filterData } from \"../utilities/utils\";\n\nfunction SubscriptionGroup({\n  title,\n  data,\n  description,\n  type,\n  creationDate,\n  expirationDate,\n  noOfDevices,\n  grpIndex,\n  setActiveGrp,\n  setActiveSGrp,\n  activeGrpTag,\n  activeSubscriptionGrpTag,\n  activeId,\n  setActiveId,\n}) {\n  const {\n    updateActiveGroup,\n    updateActiveSubscriptionGroup,\n    updateActiveRow,\n    searchQuery,\n    filters\n  } = React.useContext(DevicesContext);\n  let splitedGrp = activeSubscriptionGrpTag && parseInt(activeSubscriptionGrpTag.split(\"-\")[1])\n  let splitedSGrp = activeSubscriptionGrpTag && parseInt(activeSubscriptionGrpTag.split(\"-\")[0])\n  const [licencesCount, setCount] = useState(0);\n  let inStringFilters = JSON.stringify(filters);\n  useEffect(() => {\n    let count = 0\n    data.map(item => {\n      let filteredData = filterData(filters, item.licenses)\n      count += filteredData.length;\n      return item\n    })\n    setCount(count)\n  }, [data, inStringFilters, filters])\n  return (\n    <div className=\"subs-group_container\" key={grpIndex}>\n      <h2\n        className={`cur-pointer ${activeGrpTag === grpIndex ? \"highlight-box\" : \"\"\n          }`}\n        onClick={(e) => {\n          updateActiveGroup({\n            name: title,\n            noOfGroups: data.length,\n            description,\n            type,\n            creationDate,\n            expirationDate,\n            noOfDevices,\n          });\n          updateActiveRow({ selected: false });\n          updateActiveSubscriptionGroup(null);\n          setActiveGrp(grpIndex);\n          setActiveSGrp(null);\n          setActiveId('')\n        }}\n      >\n        {title} &nbsp;&nbsp;\n        (<span><span>{licencesCount}</span>/{licencesCount + 5}</span>)\n      </h2>\n\n      <Accordion defaultActiveKey=\"0\">\n        {data &&\n          data.map((item, index) => {\n            let sorted = item.licenses.map(v => v.osversion.replace('^', '').replace('~', '')).sort(compareVersions).filter((v, i, a) => a.indexOf(v) === i);\n\n            // Filtering Data\n            let filteredData = filterData(filters, item.licenses)\n\n            // Filtering data end\n\n            return (\n              <React.Fragment key={index}>\n                {\n                  filteredData.length ?\n                    <Card key={index}>\n                      <Accordion.Toggle\n                        as={Card.Header}\n                        eventKey={index.toString()}\n                        className={`cur-pointer ${(splitedSGrp === index) && (splitedGrp === grpIndex) ? \"highlight-box\" : \"\"\n                          }`}\n                        onClick={() => {\n                          setActiveSGrp(index + \"-\" + grpIndex);\n                          setActiveGrp(null);\n                          setActiveId('')\n                        }}\n                      >\n                        <i className=\"fas fa-angle-down togg-arrow mr-1\"></i>\n                        <Table size=\"sm\">\n                          <thead className=\"license_head\">\n                            <tr\n                              onClick={() => {\n                                updateActiveSubscriptionGroup({\n                                  name: item.group,\n                                  description: item.description,\n                                  noOfDevices: item.licenses.length,\n                                });\n                                updateActiveGroup(null);\n                                updateActiveRow({ selected: false });\n                              }}\n                            >\n                              <th>\n                                <Highlight search={searchQuery}>{item.group} (<span>{filteredData.length}</span>)</Highlight>\n                              </th>\n                              <th><Highlight search={searchQuery}>{item.model}</Highlight></th>\n                              <th><Highlight search={searchQuery}>{sorted.length > 1 ? (sorted[0] + \"-\" + sorted[sorted.length - 1]) : sorted[0]}</Highlight></th>\n                              <th><Highlight search={searchQuery}>{item.description}</Highlight></th>\n                            </tr>\n                          </thead>\n                        </Table>\n                      </Accordion.Toggle>\n\n                      <Accordion.Collapse eventKey={index.toString()}>\n                        <Card.Body className=\"ml-3\">\n                          <Licenses\n                            keyToFind={index}\n                            item={item}\n                            data={data}\n                            filteredData={filteredData}\n                            grpIndex={grpIndex}\n                            subGIndex={index}\n                            activeId={activeId}\n                            setActiveId={setActiveId}\n                            setActiveGrp={setActiveGrp}\n                            setActiveSGrp={setActiveSGrp}\n                          />\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </Card>\n                    : null\n                }\n              </React.Fragment>\n            )\n          })}\n      </Accordion>\n    </div>\n  );\n}\n\nexport default SubscriptionGroup;\n","import React, { useContext, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport SubscriptionGroup from './SubscriptionGroup';\nimport { DevicesContext } from './../Context/DevicesContext';\nimport { filterData } from '../utilities/utils';\nimport Highlight from 'react-highlighter'\n\nfunction LicenseGroups() {\n  const { data, searchResults, searchQuery, filters } =\n    useContext(DevicesContext);\n  const [activeSubscriptionGrpTag, setActiveSGrp] = useState(null);\n  const [activeGrpTag, setActiveGrp] = useState(null);\n  const [activeId, setActiveId] = React.useState('');\n  const [mArray, setMArray] = React.useState([]);\n\n  return (\n    <div>\n      <Table size='sm'>\n        <thead>\n          <tr>\n            <th className='tbl-heading tbl-heading1'>Name</th>\n            <th className='tbl-heading tbl-heading2'>Model</th>\n            <th className='tbl-heading tbl-heading3'>OS version</th>\n            <th className='tbl-heading tbl-heading4'>Description</th>\n          </tr>\n        </thead>\n      </Table>\n      <Highlight search={searchQuery}>\n        {searchQuery === ''\n          ? data.map((subscription, i) => {\n            let subGroupsFiltered = subscription.groups.filter((val) => {\n              let filteredData = filterData(filters, val.licenses)\n              if (filteredData.length) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n            return (\n              <React.Fragment key={i}>\n                {\n                  subGroupsFiltered.length ?\n                    <SubscriptionGroup\n                      key={i}\n                      title={subscription.subscription}\n                      data={subscription.groups}\n                      description={subscription.description}\n                      type={subscription.type}\n                      creationDate={subscription.creationDate}\n                      expirationDate={subscription.expirationDate}\n                      noOfDevices={subscription.noOfDevices}\n                      grpIndex={i}\n                      setActiveGrp={setActiveGrp}\n                      setActiveSGrp={setActiveSGrp}\n                      activeGrpTag={activeGrpTag}\n                      activeSubscriptionGrpTag={activeSubscriptionGrpTag}\n                      activeId={activeId}\n                      setActiveId={setActiveId}\n                      mArray={mArray}\n                      setMArray={setMArray}\n                    />\n                    : null\n                }\n              </React.Fragment>\n            );\n          })\n          : searchResults.map((subscription, i) => {\n            let subGroupsFiltered = subscription.groups.filter((val) => {\n              let filteredData = filterData(filters, val.licenses)\n              if (filteredData.length) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n            return (\n              <React.Fragment key={i}>\n                {\n                  subGroupsFiltered.length ?\n                    <SubscriptionGroup\n                      key={i}\n                      title={subscription.subscription}\n                      data={subscription.groups}\n                      description={subscription.description}\n                      type={subscription.type}\n                      creationDate={subscription.creationDate}\n                      expirationDate={subscription.expirationDate}\n                      noOfDevices={subscription.noOfDevices}\n                      grpIndex={i}\n                      setActiveGrp={setActiveGrp}\n                      setActiveSGrp={setActiveSGrp}\n                      activeGrpTag={activeGrpTag}\n                      activeSubscriptionGrpTag={activeSubscriptionGrpTag}\n                      activeId={activeId}\n                      setActiveId={setActiveId}\n                      mArray={mArray}\n                      setMArray={setMArray}\n                    />\n                    : null\n                }\n              </React.Fragment>\n            )\n          })}\n      </Highlight>\n    </div>\n  );\n}\n\nexport default LicenseGroups;\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { DevicesContext } from '../../Context/DevicesContext';\r\nimport DevicesHeader from '../DevicesHeader';\r\nimport LicenseGroups from '../LicenseGroups';\r\n\r\nfunction MainTable(props) {\r\n  const { activeRow, activeGroup, activeSGroup } = useContext(DevicesContext);\r\n  const [width,setWidth] = useState(window.innerWidth)\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      const newWidth = window.innerWidth;\r\n      setWidth(newWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', updateWindowDimensions);\r\n\r\n    return () => window.removeEventListener('resize', updateWindowDimensions) \r\n\r\n  });\r\n  return (\r\n    <Col md={(width>1000?(props.filtersOpen ? ((activeRow.selected || activeGroup || activeSGroup) ? (width>1200? 5:7) : (width>1200?9:11)) : (activeRow.selected || activeGroup || activeSGroup) ? 7 : 11):12)} className='mx-auto'>\r\n      <DevicesHeader handleClick={props.handleClick} />\r\n      <LicenseGroups />\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default MainTable\r\n","import React, { useState, useContext, useEffect } from 'react';\nimport './App.css';\nimport './styles/index.scss';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport Filters from './components/Filter/Filters';\nimport { DevicesProvider } from './Context/DevicesContext';\nimport { DevicesContext } from './Context/DevicesContext';\nimport ColComposition from './components/Layout/ColComposition';\nimport MainTable from './components/Layout/MainTable';\n\n\nfunction App() {\n  const [filtersOpen, setFiltersOpen] = useState(false);\n  const { activeRow, activeGroup, activeSGroup } = useContext(DevicesContext);\n\n  useEffect(() => {}, [activeRow.selected, activeSGroup, activeGroup]);\n\n  const handleClick = () => {\n    setFiltersOpen(true);\n  };\n\n  return (\n    <DevicesProvider>\n      <Container fluid>\n        <Row className='mt-4'>\n          {filtersOpen && (\n            <Col md={2} className='pl-0 filters-box_container'>\n              <Filters setFiltersOpen={setFiltersOpen} />\n            </Col>\n          )}\n          <MainTable filtersOpen={filtersOpen} handleClick={handleClick} />\n          <ColComposition />\n        </Row>\n      </Container>\n    </DevicesProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}